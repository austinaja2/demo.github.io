{"version":3,"sources":["features/userSlice.js","firebase.js","Header.js","SidebarOption.js","features/mailSlice.js","Sidebar.js","Mail.js","Section.js","EmailRow.js","EmailList.js","SendMail.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useSelector","dispatch","useDispatch","className","IconButton","src","alt","placeholder","type","ArrowDropDown","Avatar","onClick","signOut","then","photoUrl","SidebarOption","Icon","title","number","selected","mailSlice","selectedMail","sendMessageIsOpen","selectMail","openSendMessage","closeSendMessage","selectOpenMail","mail","selectSendMessageIsOpen","Sidebar","Button","startIcon","fontSize","InboxIcon","StarIcon","AccessTimeIcon","LabelImportantIcon","NearMeIcon","NoteIcon","ExpandMoreIcon","Mail","history","useHistory","push","subject","time","description","Section","color","style","borderBottom","EmailRow","id","Checkbox","EmailList","useState","emails","setEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","PeopleIcon","LocalOfferIcon","to","message","timestamp","Date","seconds","toUTCString","SendMail","useForm","register","handleSubmit","errors","watch","onSubmit","formData","console","log","add","FieldValue","serverTimestamp","ref","required","variant","Login","signInWithPopup","displayName","email","photoURL","catch","error","alert","App","onAuthStateChanged","path","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d4c9260.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;","import firebase from 'firebase';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBv1yDesztHaCc1q63HyIpHMeZOztsTTw4\",\r\n    authDomain: \"clone-23b1c.firebaseapp.com\",\r\n    databaseURL: \"https://clone-23b1c-default-rtdb.firebaseio.com\",\r\n    projectId: \"clone-23b1c\",\r\n    storageBucket: \"clone-23b1c.appspot.com\",\r\n    messagingSenderId: \"708249502386\",\r\n    appId: \"1:708249502386:web:3455c554238cea3a08ffab\",\r\n    measurementId: \"G-R9BYKCDJPN\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, auth, provider };","import React from 'react';\r\nimport './Header.css';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { ArrowDropDown } from '@material-ui/icons';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout, selectUser } from './features/userSlice';\r\nimport { auth } from './firebase';\r\n\r\nfunction Header() {\r\n\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    const signOut = () => {\r\n        auth.signOut().then(() => {\r\n            dispatch(logout());\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className = \"header\">\r\n            <div className = \"header__left\">\r\n                <IconButton>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <img \r\n                    src = \"https://i.pinimg.com/originals/ae/47/fa/ae47fa9a8fd263aa364018517020552d.png\"\r\n                    alt = \"\"\r\n                />\r\n            </div>\r\n\r\n            <div className = \"header__middle\">\r\n                <SearchIcon />\r\n                <input placeholder = \"search mail\" type = \"text\" />\r\n                <ArrowDropDown className = \"header__inputCaret\" />\r\n            </div>\r\n\r\n            <div className = \"header__right\">\r\n                <IconButton>\r\n                    <AppsIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <NotificationsIcon />\r\n                </IconButton>\r\n                <div className = \"header__rightAvatar\">\r\n                    <Avatar onClick = {signOut} src = {user?.photoUrl} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './SidebarOption.css';\r\n\r\nfunction SidebarOption({ Icon, title, number, selected }) {\r\n    return (\r\n        <div className = {`sidebarOption ${selected && \"sidebarOption--active\"}`}>\r\n            <Icon />\r\n            <h3>{title}</h3>\r\n            <p>{number}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const mailSlice = createSlice({\r\n  name: 'mail',\r\n  initialState: {\r\n    selectedMail: null,\r\n    sendMessageIsOpen: false,\r\n  },\r\n  reducers: {\r\n    selectMail: (state, action) => {\r\n      state.selectedMail = action.payload;\r\n    },\r\n    openSendMessage: state => {\r\n      state.sendMessageIsOpen = true;\r\n    },\r\n    closeSendMessage: state => {\r\n      state.sendMessageIsOpen = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { selectMail, openSendMessage, closeSendMessage } = mailSlice.actions;\r\n\r\nexport const selectOpenMail = (state) => state.mail.selectedMail;\r\nexport const selectSendMessageIsOpen = (state) => state.mail.sendMessageIsOpen;\r\n\r\nexport default mailSlice.reducer;","import { Button, IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport NearMeIcon from '@material-ui/icons/NearMe';\r\nimport NoteIcon from '@material-ui/icons/Note';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DuoIcon from '@material-ui/icons/Duo';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport React from 'react';\r\nimport './Sidebar.css';\r\nimport SidebarOption from './SidebarOption';\r\nimport { useDispatch } from 'react-redux';\r\nimport { openSendMessage } from './features/mailSlice';\r\n\r\nfunction Sidebar() {\r\n\r\n    //action for compose button\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className = \"sidebar\">\r\n            <Button\r\n                startIcon = {<AddIcon fontSize = \"Large\" />}\r\n                className = \"sidebar__compose\"\r\n                onClick = {() => dispatch(openSendMessage())}\r\n            >\r\n                Compose\r\n            </Button>\r\n\r\n            <SidebarOption Icon = {InboxIcon} title = \"Inbox\" number = {55} selected = {true} />\r\n            <SidebarOption Icon = {StarIcon} title = \"Starred\" number = {55} />\r\n            <SidebarOption Icon = {AccessTimeIcon} title = \"Snoozed\" number = {55} />\r\n            <SidebarOption Icon = {LabelImportantIcon} title = \"Important\" number = {55} />\r\n            <SidebarOption Icon = {NearMeIcon} title = \"Sent\" number = {55} />\r\n            <SidebarOption Icon = {NoteIcon} title = \"Drafts\" number = {55} />\r\n            <SidebarOption Icon = {ExpandMoreIcon} title = \"More\" number = {55} />\r\n\r\n            <div className = \"sidebar__footer\">\r\n                <div className = \"sidebar__footerIcons\">\r\n                    <IconButton>\r\n                        <PersonIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <DuoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <PhoneIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Mail.css';\r\nimport { useHistory } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectOpenMail } from './features/mailSlice';\r\n\r\nfunction Mail() {\r\n\r\n    const history = useHistory();\r\n    const selectedMail = useSelector(selectOpenMail);\r\n\r\n    return (\r\n        <div className = \"mail\">\r\n            <div className = \"mail__tools\">\r\n                <div className = \"mail__toolsLeft\">\r\n                    <IconButton onClick = {() => history.push(\"/\")}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoveToInboxIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ErrorIcon />\r\n                    </IconButton>   \r\n\r\n                    <IconButton>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                    \r\n                    <IconButton>\r\n                        <EmailIcon />\r\n                    </IconButton>\r\n                    \r\n                    <IconButton>\r\n                        <WatchLaterIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <CheckCircleIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <LabelImportantIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <div className = \"mail__toolsRight\">\r\n                    <IconButton>\r\n                        <UnfoldMoreIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <PrintIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ExitToAppIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className = \"mail__body\">\r\n                <div className = \"mail__bodyHeader\">\r\n                    <h2>{selectedMail?.subject}</h2>\r\n                    <LabelImportantIcon className = \"mail__important\" />\r\n                    <p>{selectedMail?.title}</p>\r\n                    <p className = \"mail__time\">{selectedMail?.time}</p>\r\n                </div>\r\n                <div className = \"mail__message\">\r\n                    <p>{selectedMail?.description}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mail;","import React from 'react';\r\nimport './Section.css';\r\n\r\nfunction Section({ Icon, title, color, selected}) {\r\n    return (\r\n        <div \r\n            className = {`section ${selected && \"section--selected\"}`}\r\n            style = {{\r\n                borderBottom: `3px solid ${color}`,\r\n                color: `${selected && color}`\r\n            }}\r\n        >\r\n            <Icon />\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section;","import { Checkbox, IconButton } from '@material-ui/core';\r\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\r\nimport LabelImportantOutlinedIcon from '@material-ui/icons/LabelImportantOutlined';\r\nimport React from 'react';\r\nimport './EmailRow.css';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { selectMail } from './features/mailSlice';\r\n\r\nfunction EmailRow({ id, title, subject, description, time }) {\r\n\r\n    const history = useHistory();  //this function will push into another page\r\n    const dispatch = useDispatch();\r\n\r\n    const openMail = () => {\r\n        dispatch(\r\n            selectMail({\r\n                id, \r\n                title, \r\n                subject, \r\n                description, \r\n                time,\r\n            })\r\n        );\r\n\r\n        history.push(\"/mail\");\r\n    };\r\n\r\n    return (\r\n        <div onClick = {openMail} className = \"emailRow\">\r\n            <div className = \"emailRow__options\">\r\n                <Checkbox />\r\n                <IconButton>\r\n                    <StarBorderOutlinedIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <LabelImportantOutlinedIcon />\r\n                </IconButton>\r\n            </div>\r\n\r\n            <h3 className = \"emailRow__title\">\r\n                {title}\r\n            </h3>\r\n\r\n            <div className = \"emailRow__message\">\r\n                <h4>\r\n                    {subject}\r\n                    <span className = \"emailRow__description\">\r\n                        {description}\r\n                    </span>\r\n                </h4>\r\n            </div>\r\n\r\n            <p className = \"emailRow__time\">\r\n                {time}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailRow;","import { Checkbox, IconButton } from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Section from './Section';\r\nimport './EmailList.css';\r\nimport EmailRow from './EmailRow';\r\nimport { db } from './firebase';\r\n\r\nfunction EmailList() {\r\n\r\n    const [emails, setEmails] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"emails\")\r\n            .orderBy(\"timestamp\", \"desc\")\r\n            .onSnapshot((snapshot) =>\r\n                setEmails(\r\n                    snapshot.docs.map((doc) => ({\r\n                        id: doc.id,\r\n                        data: doc.data(),\r\n                    }))\r\n                )\r\n            );\r\n    }, []);\r\n\r\n    return (\r\n        <div className = \"emailList\">\r\n            <div className = \"emailList__settings\">\r\n                <div className = \"emailList__settingsLeft\">\r\n                    <Checkbox />\r\n                    <IconButton>\r\n                        <ArrowDropDownIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n\r\n                <div className = \"emailList__settingsRight\">\r\n                    <IconButton>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <KeyboardHideIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className = \"emailList__sections\">\r\n                <Section Icon = {InboxIcon} title = \"Primary\" color = \"red\" selected />\r\n                <Section Icon = {PeopleIcon} title = \"Social\" color = \"#1A73E8\" />\r\n                <Section Icon = {LocalOfferIcon} title = \"Promotions\" color = \"green\" />\r\n            </div>\r\n\r\n            <div className = \"emailList__list\">\r\n\r\n                {emails.map(({ id, data: { to, subject, message, timestamp}}) => (\r\n                    <EmailRow \r\n                        id = {id}\r\n                        key = {id}\r\n                        title = {to}\r\n                        subject = {subject}\r\n                        description = {message}\r\n                        time = {new Date(timestamp?.seconds * 1000 ).toUTCString()}\r\n                    />\r\n                ))}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailList;","import React from 'react';\r\nimport './SendMail.css';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSendMessage } from './features/mailSlice';\r\nimport firebase from 'firebase';\r\nimport { db } from './firebase';\r\n\r\nfunction SendMail() {\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        db.collection(\"emails\").add({\r\n            to: formData.to,\r\n            subject: formData.subject,\r\n            message: formData.message,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n        dispatch(closeSendMessage());\r\n    };\r\n\r\n    //action to close the create mail option\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className = \"sendMail\">\r\n            <div className = \"sendMail__header\">\r\n                <h3>New Message</h3>\r\n                <CloseIcon\r\n                    onClick = {() => dispatch(closeSendMessage())}\r\n                    className = \"sendMail__close\" \r\n                />\r\n            </div>\r\n\r\n            <form onSubmit = {handleSubmit(onSubmit)}>\r\n                <input\r\n                    name = \"to\" \r\n                    placeholder = \"To\" \r\n                    type = \"email\" \r\n                    ref = {register({ required: true })}\r\n                />\r\n                {errors.to && <p className = \"sendMail__error\">To is Required</p>}\r\n\r\n                <input \r\n                    name = \"subject\"\r\n                    placeholder = \"Subject\" \r\n                    type = \"text\" \r\n                    ref = {register({ required: true })}\r\n                />\r\n                {errors.subject && <p className = \"sendMail__error\">Subject is Required</p>}\r\n\r\n                <input\r\n                    name = \"message\"\r\n                    placeholder = \"Message...\" \r\n                    type = \"text\" \r\n                    className = \"sendMail__message\"  \r\n                    ref = {register({ required: true })}  \r\n                />\r\n                {errors.message && <p className = \"sendMail__error\">Message is Required</p>}\r\n\r\n                <div className = \"sendMail__options\">\r\n                    <Button \r\n                        className = \"sendMail__send\"\r\n                        variant = \"contained\"\r\n                        color = \"primary\"\r\n                        type = \"submit\"\r\n                    >\r\n                        Send\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendMail;","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from './features/userSlice';\r\nimport { auth, provider } from './firebase';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login ({\r\n                        displayName: user.displayName,\r\n                        email: user.email,\r\n                        photoUrl: user.photoURL,\r\n                    })\r\n                );\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    }\r\n    return (\r\n        <div className = \"login\">\r\n            <div className = \"login__container\">\r\n                <img \r\n                    src = \"https://static.dezeen.com/uploads/2020/10/gmail-google-logo-rebrand-workspace-design_dezeen_2364_col_0.jpg\"\r\n                    alt = \"\"\r\n                />\r\n\r\n                <Button variant = \"contained\" color = \"primary\" onClick = {signIn} >Login</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Mail from './Mail';\nimport EmailList from './EmailList';\nimport SendMail from './SendMail';\nimport Login from './Login';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSendMessageIsOpen } from './features/mailSlice';\nimport { login, selectUser } from './features/userSlice';\nimport { auth } from './firebase';\n\nfunction App() {\n\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      if(user) {\n        // the user is logged in \n        dispatch(\n          login({\n          displayName: user.displayName,\n          email: user.email,\n          photoUrl: user.photoURL,\n        }))\n      }\n    })\n  }, [])\n\n  return (\n    <Router>\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app\">\n          <Header />\n\n          <div className = \"app__body\">\n            <Sidebar />\n\n            <Switch>\n              <Route path = \"/mail\">\n                <Mail />\n              </Route>\n              <Route path = \"/\">\n                <EmailList />\n              </Route>\n            </Switch>\n          </div>\n\n          {sendMessageIsOpen && <SendMail />}\n        </div>\n      )}\n    </Router>\n  );\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\r\nimport mailReducer from '../features/mailSlice';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    mail: mailReducer,\r\n    user: userReducer,\r\n  },\r\n});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}